# -*- coding: utf-8 -*-
"""Conditional Statements and loops.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zBgsc5A-H0Qri5Zx5Ug7JMlmYj1yXqi6

1. Write a Python program to find those numbers which are divisible by 7 and multiples of 5, between 1500 and 2700 (both included).
"""

numbers = range(1700, 2701)

def special_numbers(numbers):
    storage = []
    for number in numbers:
        if number % 7 == 0 and number % 5 == 0:
            storage.append(number)
    return storage

print(special_numbers(numbers))

"""2. Write a Python program to convert temperatures to and from Celsius and Fahrenheit. [ Formula : c/5 = f-32/9 [ where c = temperature in celsius and f = temperature in fahrenheit ]"""

temp = input("Temperature in Celsius (give C) or Fahrenheit (give F)? ")
if temp == "C" or temp == "c":
  message = float(input("Give me temperature to convert to Fahrenheit. "))
  convert =  (message * 9 / 5) + 32
  print("Temperature in Fahrenheit is" , convert)
elif temp == "F" or temp == "f":
  message = float(input("Give me temperature to convert to Celsius. "))
  convert = (message - 32) * 5/9
  print("Temperature in Celsius is", convert)
else:
  print("Wrong choise")

"""3. Write a Python program to guess a number between 1 and 9. Note : User is prompted to enter a guess. If the user guesses wrong then the prompt appears again until the guess is correct, on successful guess, user will get a "Well guessed!" message, and the program will exit."""

def guess_number():
  correkt_number = 3
  while True:
    number = int(input("Guess number between 1 and 9: "))
    if number == correkt_number:
      print("Well guessed!")
      break
    else:
      print("That's not correkt number, guess again.")
guess_number()

"""4. Write a Python program to construct the following pattern, using a nested for loop."""

n = 5
for i in range(n):
    for j in range(i):
        print('* ', end="")
    print('')
for i in range(n, 0, -1):
    for j in range(i):
        print('* ', end="")
    print('')

"""5. Write a Python program that accepts a word from the user and reverses it."""

word = input("Give me word to reverses it ")
def reversed_word(word):
  reversed_word = word[::-1]
  return reversed_word
print(f"reversed word is: {reversed_word(word)}")

"""6. Write a Python program to count the number of even and odd numbers in a series of numbers"""

numbers = (1, 2, 3, 4, 5, 6, 7, 8, 9)
count_odd = 0
count_even = 0
for x in numbers:
    if not x % 2:
        count_even += 1
    else:
        count_odd += 1
print("Number of even numbers:", count_even)
print("Number of odd numbers:", count_odd)

"""7. Write a Python program that prints all the numbers from 0 to 6 except 3 and 6."""

for x in range(6):
    if (x == 3 or x == 6):
        continue
    print(x, end=' ')
print("\n")

"""8. Write a Python program to get the Fibonacci series between 0 and 50."""

x, y = 0, 1
while y < 50:
    print(y)
    x, y = y, x + y

"""9. Write a Python program that accepts a sequence of lines (blank line to terminate) as input and prints the lines as output (all characters in lower case)."""

lines = []
while True:
    l = input()
    if l:
        lines.append(l.upper())
    else:
        break;
for l in lines:
    print(l)

"""10. Write a Python program that accepts a sequence of comma separated 4 digit binary numbers as its input. The program will print the numbers that are divisible by 5 in a comma separated sequence."""

items = []
num = [x for x in input().split(',')]
for p in num:
    x = int(p, 2)
    if not x % 5:
        items.append(p)
print(','.join(items))

"""11. Write a Python program to check the validity of passwords input by users.
Validation :

At least 1 letter between [a-z] and 1 letter between [A-Z].
At least 1 number between [0-9].
At least 1 character from [$#@].
Minimum length 6 characters.
Maximum length 16 characters.
"""

word = input("Give password ")
def password(word):
  letter = any(chr(i) in word for i in range(ord('a'), ord('z')+1))
  Letter = any(chr(i) in word for i in range(ord('A'), ord('Z')+1))
  number = any(chr(i) in word for i in range(ord('0'), ord('9')+1))
  length = 5 < len(word) < 17
  special_chars = ('$','#','@')
  special = any(char in word for char in special_chars)
  if letter and Letter and number and length and special:
    print("password is correct")
  else:
    print("password is wrong")
  return word
print(password(word))

"""12. Write a Python program to find numbers between 100 and 400 (both included) where each digit of a number is an even number. The numbers obtained should be printed in a comma-separated sequence."""

numbers = range(100, 401)
def find_number(numbers):
  storage = []
  for number in numbers:
    if number % 2 == 0:
      storage.append(number)
  return storage
print(find_number(numbers))

"""13. Write a Python program to print the alphabet pattern 'A'."""

result_str = ""
for row in range(0, 7):
    for column in range(0, 7):
        if (((column == 1 or column == 5) and row != 0) or ((row == 0 or row == 3) and (column > 1 and column < 5))):
            result_str = result_str + "*"
        else:
            result_str = result_str + " "
    result_str = result_str + "\n"
print(result_str)

"""14. Write a Python program to print the alphabet pattern 'E'."""

result_str = ""
for row in range(0, 7):
    for column in range(0, 7):
        if (column == 1 or ((row == 0 or row == 6) and (column > 1 and column < 6)) or (row == 3 and column > 1 and column < 5)):
            result_str = result_str + "*"
        else:
            result_str = result_str + " "
    result_str = result_str + "\n"
print(result_str)

"""15. Write a Python program to print the alphabet pattern 'G'."""

result_str = ""
for row in range(0, 7):
    for column in range(0, 7):
        if ((column == 1 and row != 0 and row != 6) or ((row == 0 or row == 6) and column > 1 and column < 5) or (row == 3 and column > 2 and column < 6) or (column == 5 and row != 0 and row != 2 and row != 6)):
            result_str = result_str + "*"
        else:
            result_str = result_str + " "
    result_str = result_str + "\n"
print(result_str)

"""16. Write a Python program to print the alphabet pattern 'M'."""

result_str = ""
for row in range(0, 7):
    for column in range(0, 7):
        if (column == 1 or column == 5 or (row == 2 and (column == 2 or column == 4)) or (row == 3 and column == 3)):
            result_str = result_str + "* "
        else:
            result_str = result_str + "  "
    result_str = result_str + "\n"
print(result_str)

"""17. Write a Python program to print the alphabet pattern 'P'."""

result_str = ""
for row in range(0, 7):
    for column in range(0, 7):
        if (column == 1 or ((row == 0 or row == 3) and column > 0 and column < 5) or ((column == 5 or column == 1) and (row == 1 or row == 2))):
            result_str = result_str + "*"
        else:
            result_str = result_str + " "
    result_str = result_str + "\n"
print(result_str)

"""18. Write a Python program to print the alphabet pattern 'R'."""

result_str = ""
for row in range(0, 7):
    for column in range(0, 7):
        if (column == 1 or ((row == 0 or row == 3) and column > 1 and column < 5) or (column == 5 and row != 0 and row < 3) or (column == row - 1 and row > 2)):
            result_str = result_str + "*"
        else:
            result_str = result_str + " "
    result_str = result_str + "\n"
print(result_str)

"""19. Write a Python program to check whether an alphabet is a vowel or consonant."""

letters = input("Input a letter of the alphabet: ")
def check_letters(letters):
  vowel =['a', 'e', 'i', 'o', 'u', 'y', 'A', 'E', 'I', 'O', 'U', 'Y']
  other = ['[', ']', '\\', '^', '_','\'']
  if letters in vowel:
      print(f"Letter {letters} is vowel.")
  elif letters in other:
      print(f"This symbol {letters} is not a letter.")
  else:
      print(f"Letter {letters} is consonant.")
check_letters(letters)

"""20. Write a Python program to convert a month name to a number of days."""

print("List of months: January, February, March, April, May, June, July, August, September, October, November, December")
month = input("Input month: ")
def day_in_month(month):
  if month =='January' or month == 'March' or month == 'May' or month == 'July' or month == 'August' or month == 'October' or month == 'December':
    print("No. of days: 31 days.")
  elif month =='April' or month == 'June' or month == 'September' or month == 'November':
    print("No. of days: 30 .")
  elif month == 'February':
    print("No. of days: 28/29 days.")
  else:
    print("It's not a month.")
day_in_month(month)