# -*- coding: utf-8 -*-
"""Dictionary.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Kk47GNSiXqKelSvS1MR9soQjxlqpAzLT

1. Write a Python script to sort (ascending and descending) a dictionary by value.
"""

def sort_dict_by_value(d, ascending=True):
    sorted_dict = dict(sorted(d.items(), key=lambda item: item[1], reverse=not ascending))
    return sorted_dict
example_dict = {'a': 3, 'b': 1, 'c': 2}
rosnaco = sort_dict_by_value(example_dict)
print("Słownik posortowany rosnąco:", rosnaco)
malejaco = sort_dict_by_value(example_dict, ascending=False)
print("Słownik posortowany malejąco:", malejaco)

"""2. Write a Python script to add a key to a dictionary."""

def add_key_to_dict(d, key, value):
    d[key] = value
    return d
example_dict = {'a': 1, 'b': 2, 'c': 3}
new_key = 'd'
new_value = 4
updated_dict = add_key_to_dict(example_dict, new_key, new_value)
print("Słownik po dodaniu klucza:", updated_dict)

"""3. Write a Python script to check whether a given key already exists in a dictionary."""

def check_key_existence(d, key):
    if key in d:
        return True
    else:
        return False
example_dict = {'a': 1, 'b': 2, 'c': 3}
key_to_check = 'b'
if check_key_existence(example_dict, key_to_check):
    print(f"Klucz '{key_to_check}' istnieje w słowniku.")
else:
    print(f"Klucz '{key_to_check}' nie istnieje w słowniku.")

"""4. Write a Python script to merge two Python dictionaries."""

def merge_dicts(dict1, dict2):
    merged_dict = dict1.copy()
    merged_dict.update(dict2)
    return merged_dict
dict1 = {'a': 1, 'b': 2}
dict2 = {'c': 3, 'd': 4}
merged_dict = merge_dicts(dict1, dict2)
print("Połączony słownik:", merged_dict)

"""5. Write a Python program to sum all the items in a dictionary."""

def sum_dict_values(d):
    return sum(d.values())
example_dict = {'a': 10, 'b': 20, 'c': 30}
total_sum = sum_dict_values(example_dict)
print("Suma wszystkich wartości w słowniku:", total_sum)

"""6. Write a Python program to multiply all the items in a dictionary."""

def multiply_dict_values(d):
    result = 1
    for value in d.values():
        result *= value
    return result
example_dict = {'a': 2, 'b': 3, 'c': 4}
total_product = multiply_dict_values(example_dict)
print("Iloczyn wszystkich wartości w słowniku:", total_product)

"""7. Write a Python program to get the maximum and minimum values of a dictionary."""

def get_max_min_values(d):
    if len(d) == 0:
        return None, None
    max_value = max(d.values())
    min_value = min(d.values())
    return max_value, min_value
example_dict = {'a': 10, 'b': 20, 'c': 5, 'd': 30}
max_val, min_val = get_max_min_values(example_dict)
print("Maksymalna wartość w słowniku:", max_val)
print("Minimalna wartość w słowniku:", min_val)

"""8. Write a Python program to remove duplicates from the dictionary."""

def remove_duplicates_from_dict(d):
    unique_values = set()
    unique_dict = {}
    for key, value in d.items():
        if value not in unique_values:
            unique_values.add(value)
            unique_dict[key] = value
    return unique_dict
example_dict = {'a': 1, 'b': 2, 'c': 1, 'd': 3, 'e': 2}
unique_dict = remove_duplicates_from_dict(example_dict)
print("Słownik po usunięciu duplikatów:", unique_dict)

"""9. Write a Python program to print a dictionary in table format."""

my_dict = {'C1': [1, 2, 3], 'C2': [5, 6, 7], 'C3': [9, 10, 11]}
for row in zip(*([key] + (value) for key, value in sorted(my_dict.items()))):
    print(*row)

"""10. Write a Python program to count the values associated with a key in a dictionary."""

student = [{'id': 1, 'success': True, 'name': 'Lary'},
 {'id': 2, 'success': False, 'name': 'Rabi'},
 {'id': 3, 'success': True, 'name': 'Alex'}]
print(sum(d['id'] for d in student))
print(sum(d['success'] for d in student))

"""11. Write a Python program to sort a list alphabetically in a dictionary."""

num = {'n1': [2, 3, 1], 'n2': [5, 1, 2], 'n3': [3, 2, 4]}
sorted_dict = {x: sorted(y) for x, y in num.items()}
print(sorted_dict)

"""12. Write a Python program to get the key, value and item in a dictionary."""

dict_num = {1: 10, 2: 20, 3: 30, 4: 40, 5: 50, 6: 60}
print("key  value  count")
for count, (key, value) in enumerate(dict_num.items(), 1):
    print(key, '   ', value, '    ', count)

"""13. Write a Python program to print a dictionary line by line."""

students = {'Aex': {'class': 'V', 'roll_id': 2}, 'Puja': {'class': 'V', 'roll_id': 3}}
for a in students:
    print(a)
    for b in students[a]:
        print(b, ':', students[a][b])

"""14. Write a Python program to count the number of items in a dictionary value that is a list."""

dict =  {'Alex': ['subj1', 'subj2', 'subj3'], 'David': ['subj1', 'subj2']}
ctr = sum(map(len, dict.values()))
print(ctr)

"""15. Write a Python program to replace dictionary values with their sums."""

def replace_with_sum(d):
    for key in d:
        if isinstance(d[key], list):
            d[key] = sum(d[key])
    return d
example_dict = {'a': [1, 2, 3],
                'b': [4, 5, 6],
                'c': 10}
updated_dict = replace_with_sum(example_dict)
print("Słownik po zamianie wartości na ich sumy:", updated_dict)

"""16. Write a Python program to find the length of a dictionary of values."""

def dict_values_length(d):
    return len(d.values())
example_dict = {'a': 1, 'b': 2, 'c': 3, 'd': 4}
length = dict_values_length(example_dict)
print("Długość wartości w słowniku:", length)

"""17. Write a Python program to invert a dictionary with unique hashable values."""

def test(students):
    return {value: key for key, value in students.items()}
students = {
    'Theodore': 10,
    'Mathew': 11,
    'Roxanne': 9,
}
print(test(students))

"""18. Write a Python program to find all keys in a dictionary that have the given value."""

def test(dict, val):
    return list(key for key, value in dict.items() if value == val)
students = {
    'Theodore': 19,
    'Roxanne': 20,
    'Mathew': 21,
    'Betty': 20
}
print("\nOriginal dictionary elements:")
print(students)
print("\nFind all keys in the said dictionary that have the specified value:")
print(test(students, 20))

"""19. Write a Python program to transform a dictionary into a list of tuples."""

def test(d):
    return list(d.items())
d = {'Red': 1, 'Green': 3, 'White': 5, 'Black': 2, 'Pink': 4}
print("Original Dictionary:")
print(d)
print("\nConvert the said dictionary to a list of tuples:")
print(test(d))

"""20. Write a Python program to create a flat list of all the keys in a flat dictionary."""

def test(flat_dict):
    return list(flat_dict.keys())
students = {
    'Theodore': 19,
    'Roxanne': 20,
    'Mathew': 21,
    'Betty': 20
}
print("\nOriginal dictionary elements:")
print(students)
print("\nCreate a flat list of all the keys of the said flat dictionary:")
print(test(students))